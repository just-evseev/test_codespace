[
  {
    "id": "post-codespace",
    "title": "Программирование на iPad через GitHub Codespace",
    "date": "07.07.2025",
    "tags": ["iPad", "Облачная разработка"],
    "preview": "Современные облачные инструменты позволяют писать код буквально с любого устройства. Например, с помощью GitHub Codespace вы можете открыть полноценную среду разработки прямо в браузере на iPad.",
    "url": "post-codespace.html",
    "content": "<p>Современные облачные инструменты позволяют писать код буквально с любого устройства. Например, с помощью <b>GitHub Codespace</b> вы можете открыть полноценную среду разработки прямо в браузере на iPad.</p>\n<ul>\n    <li>Не нужно ничего устанавливать — всё работает в облаке.</li>\n    <li>Доступны VS Code, терминал, git и даже запуск серверов.</li>\n    <li>Можно быстро переключаться между проектами и устройствами.</li>\n</ul>\n<p>Достаточно зайти на <a href='https://github.com/codespaces' target='_blank'>github.com/codespaces</a>, выбрать репозиторий и начать работу. Это отличный способ программировать в дороге, на отдыхе или просто с планшета.</p>"
  },
  {
    "id": "post-swift-concurrency",
    "title": "Swift Concurrency: просто о современном асинхронном коде",
    "date": "08.07.2025",
    "tags": ["Swift", "Concurrency"],
    "preview": "С выходом Swift 5.5 появилась современная система конкурентности — Swift Concurrency. Теперь писать асинхронный код стало проще и безопаснее.",
    "url": "post-swift-concurrency.html",
    "content": "<p>С выходом Swift 5.5 в языке появилась современная система конкурентности — <b>Swift Concurrency</b>. Теперь писать асинхронный код стало проще и безопаснее.</p>\n<ul>\n    <li>async/await — лаконичный синтаксис для асинхронных функций</li>\n    <li>Structured Concurrency — задачи группируются и управляются автоматически</li>\n    <li>Actors — безопасная работа с состоянием в многопоточной среде</li>\n</ul>\n<p>Пример асинхронной функции:</p>\n<pre><code>func fetchData() async throws -> Data {\n    let url = URL(string: \"https://example.com\")!\n    let (data, _) = try await URLSession.shared.data(from: url)\n    return data\n}</code></pre>\n<p>Благодаря новым возможностям, код становится чище, а ошибки гонки — реже. Если вы пишете под iOS или macOS, обязательно попробуйте Swift Concurrency в своих проектах!</p>"
  },
  {
    "id": "post-murmansk",
    "title": "Путешествие в Мурманск: северное вдохновение",
    "date": "08.07.2025",
    "tags": ["Путешествия", "Россия"],
    "preview": "Недавно я отправился в Мурманск — город за Полярным кругом, где летом не заходит солнце, а зимой можно увидеть северное сияние.",
    "url": "post-murmansk.html",
    "content": "<p>Недавно я отправился в Мурманск — город за Полярным кругом, где летом не заходит солнце, а зимой можно увидеть северное сияние.</p>\n<ul>\n    <li>Белые ночи и уникальная северная природа</li>\n    <li>Морской порт и свежайшие морепродукты</li>\n    <li>Экскурсии на Кольский полуостров и в Териберку</li>\n</ul>\n<p>Мурманск вдохновляет своей суровой красотой и атмосферой настоящего Севера. Если хотите увидеть край света — обязательно посетите этот город!</p>"
  }
]
